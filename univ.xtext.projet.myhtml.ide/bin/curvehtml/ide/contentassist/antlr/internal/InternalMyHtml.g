/*
 * generated by Xtext 2.25.0
 */
grammar InternalMyHtml;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package curvehtml.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package curvehtml.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import curvehtml.services.MyHtmlGrammarAccess;

}
@parser::members {
	private MyHtmlGrammarAccess grammarAccess;

	public void setGrammarAccess(MyHtmlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRulehtml_generator_program
entryRulehtml_generator_program
:
{ before(grammarAccess.getHtml_generator_programRule()); }
	 rulehtml_generator_program
{ after(grammarAccess.getHtml_generator_programRule()); } 
	 EOF 
;

// Rule html_generator_program
rulehtml_generator_program 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHtml_generator_programAccess().getGroup()); }
		(rule__Html_generator_program__Group__0)
		{ after(grammarAccess.getHtml_generator_programAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestatement
entryRulestatement
:
{ before(grammarAccess.getStatementRule()); }
	 rulestatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule statement
rulestatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulegraph
entryRulegraph
:
{ before(grammarAccess.getGraphRule()); }
	 rulegraph
{ after(grammarAccess.getGraphRule()); } 
	 EOF 
;

// Rule graph
rulegraph 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphAccess().getGroup()); }
		(rule__Graph__Group__0)
		{ after(grammarAccess.getGraphAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecsv_loader
entryRulecsv_loader
:
{ before(grammarAccess.getCsv_loaderRule()); }
	 rulecsv_loader
{ after(grammarAccess.getCsv_loaderRule()); } 
	 EOF 
;

// Rule csv_loader
rulecsv_loader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCsv_loaderAccess().getGroup()); }
		(rule__Csv_loader__Group__0)
		{ after(grammarAccess.getCsv_loaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecurve
entryRulecurve
:
{ before(grammarAccess.getCurveRule()); }
	 rulecurve
{ after(grammarAccess.getCurveRule()); } 
	 EOF 
;

// Rule curve
rulecurve 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCurveAccess().getGroup()); }
		(rule__Curve__Group__0)
		{ after(grammarAccess.getCurveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule type_graph
ruletype_graph
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_graphAccess().getAlternatives()); }
		(rule__Type_graph__Alternatives)
		{ after(grammarAccess.getType_graphAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule list_color
rulelist_color
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getList_colorAccess().getAlternatives()); }
		(rule__List_color__Alternatives)
		{ after(grammarAccess.getList_colorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGraphParserRuleCall_0()); }
		rulegraph
		{ after(grammarAccess.getStatementAccess().getGraphParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getCsv_loaderParserRuleCall_1()); }
		rulecsv_loader
		{ after(grammarAccess.getStatementAccess().getCsv_loaderParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_graph__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_graphAccess().getBarEnumLiteralDeclaration_0()); }
		('bar')
		{ after(grammarAccess.getType_graphAccess().getBarEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getType_graphAccess().getLineEnumLiteralDeclaration_1()); }
		('line')
		{ after(grammarAccess.getType_graphAccess().getLineEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getType_graphAccess().getRadarEnumLiteralDeclaration_2()); }
		('radar')
		{ after(grammarAccess.getType_graphAccess().getRadarEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getType_graphAccess().getDoughnutEnumLiteralDeclaration_3()); }
		('doughnut')
		{ after(grammarAccess.getType_graphAccess().getDoughnutEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getType_graphAccess().getPieEnumLiteralDeclaration_4()); }
		('pie')
		{ after(grammarAccess.getType_graphAccess().getPieEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__List_color__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getList_colorAccess().getRedEnumLiteralDeclaration_0()); }
		('red')
		{ after(grammarAccess.getList_colorAccess().getRedEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getList_colorAccess().getOrangeEnumLiteralDeclaration_1()); }
		('orange')
		{ after(grammarAccess.getList_colorAccess().getOrangeEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getList_colorAccess().getYellowEnumLiteralDeclaration_2()); }
		('yellow')
		{ after(grammarAccess.getList_colorAccess().getYellowEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getList_colorAccess().getGreenEnumLiteralDeclaration_3()); }
		('green')
		{ after(grammarAccess.getList_colorAccess().getGreenEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getList_colorAccess().getBlueEnumLiteralDeclaration_4()); }
		('blue')
		{ after(grammarAccess.getList_colorAccess().getBlueEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getList_colorAccess().getPurpleEnumLiteralDeclaration_5()); }
		('purple')
		{ after(grammarAccess.getList_colorAccess().getPurpleEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getList_colorAccess().getGreyEnumLiteralDeclaration_6()); }
		('grey')
		{ after(grammarAccess.getList_colorAccess().getGreyEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getList_colorAccess().getPinkEnumLiteralDeclaration_7()); }
		('pink')
		{ after(grammarAccess.getList_colorAccess().getPinkEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getList_colorAccess().getLimeEnumLiteralDeclaration_8()); }
		('lime')
		{ after(grammarAccess.getList_colorAccess().getLimeEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getList_colorAccess().getTealEnumLiteralDeclaration_9()); }
		('teal')
		{ after(grammarAccess.getList_colorAccess().getTealEnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getList_colorAccess().getCyanEnumLiteralDeclaration_10()); }
		('cyan')
		{ after(grammarAccess.getList_colorAccess().getCyanEnumLiteralDeclaration_10()); }
	)
	|
	(
		{ before(grammarAccess.getList_colorAccess().getIndigoEnumLiteralDeclaration_11()); }
		('indigo')
		{ after(grammarAccess.getList_colorAccess().getIndigoEnumLiteralDeclaration_11()); }
	)
	|
	(
		{ before(grammarAccess.getList_colorAccess().getBrownEnumLiteralDeclaration_12()); }
		('brown')
		{ after(grammarAccess.getList_colorAccess().getBrownEnumLiteralDeclaration_12()); }
	)
	|
	(
		{ before(grammarAccess.getList_colorAccess().getAmberEnumLiteralDeclaration_13()); }
		('amber')
		{ after(grammarAccess.getList_colorAccess().getAmberEnumLiteralDeclaration_13()); }
	)
	|
	(
		{ before(grammarAccess.getList_colorAccess().getBlackEnumLiteralDeclaration_14()); }
		('black')
		{ after(grammarAccess.getList_colorAccess().getBlackEnumLiteralDeclaration_14()); }
	)
	|
	(
		{ before(grammarAccess.getList_colorAccess().getWhiteEnumLiteralDeclaration_15()); }
		('white')
		{ after(grammarAccess.getList_colorAccess().getWhiteEnumLiteralDeclaration_15()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_generator_program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Html_generator_program__Group__0__Impl
	rule__Html_generator_program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_generator_program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHtml_generator_programAccess().getHtml_generator_programAction_0()); }
	()
	{ after(grammarAccess.getHtml_generator_programAccess().getHtml_generator_programAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_generator_program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Html_generator_program__Group__1__Impl
	rule__Html_generator_program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_generator_program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHtml_generator_programAccess().getHtml_generator_programKeyword_1()); }
	'html_generator_program'
	{ after(grammarAccess.getHtml_generator_programAccess().getHtml_generator_programKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_generator_program__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Html_generator_program__Group__2__Impl
	rule__Html_generator_program__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_generator_program__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHtml_generator_programAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getHtml_generator_programAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_generator_program__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Html_generator_program__Group__3__Impl
	rule__Html_generator_program__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_generator_program__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHtml_generator_programAccess().getStatementAssignment_3()); }
	(rule__Html_generator_program__StatementAssignment_3)
	{ after(grammarAccess.getHtml_generator_programAccess().getStatementAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_generator_program__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Html_generator_program__Group__4__Impl
	rule__Html_generator_program__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_generator_program__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHtml_generator_programAccess().getGroup_4()); }
	(rule__Html_generator_program__Group_4__0)*
	{ after(grammarAccess.getHtml_generator_programAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_generator_program__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Html_generator_program__Group__5__Impl
	rule__Html_generator_program__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_generator_program__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHtml_generator_programAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getHtml_generator_programAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_generator_program__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Html_generator_program__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_generator_program__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHtml_generator_programAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getHtml_generator_programAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Html_generator_program__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Html_generator_program__Group_4__0__Impl
	rule__Html_generator_program__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_generator_program__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHtml_generator_programAccess().getSemicolonKeyword_4_0()); }
	';'
	{ after(grammarAccess.getHtml_generator_programAccess().getSemicolonKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_generator_program__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Html_generator_program__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_generator_program__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHtml_generator_programAccess().getStatementAssignment_4_1()); }
	(rule__Html_generator_program__StatementAssignment_4_1)
	{ after(grammarAccess.getHtml_generator_programAccess().getStatementAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Graph__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__0__Impl
	rule__Graph__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getGraphAction_0()); }
	()
	{ after(grammarAccess.getGraphAccess().getGraphAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__1__Impl
	rule__Graph__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getCreateKeyword_1()); }
	'create'
	{ after(grammarAccess.getGraphAccess().getCreateKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__2__Impl
	rule__Graph__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getNameAssignment_2()); }
	(rule__Graph__NameAssignment_2)
	{ after(grammarAccess.getGraphAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__3__Impl
	rule__Graph__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getGraphAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__4__Impl
	rule__Graph__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getStyleKeyword_4()); }
	'style'
	{ after(grammarAccess.getGraphAccess().getStyleKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__5__Impl
	rule__Graph__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getEqualsSignKeyword_5()); }
	'='
	{ after(grammarAccess.getGraphAccess().getEqualsSignKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__6__Impl
	rule__Graph__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getStyleAssignment_6()); }
	(rule__Graph__StyleAssignment_6)
	{ after(grammarAccess.getGraphAccess().getStyleAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__7__Impl
	rule__Graph__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getCommaKeyword_7()); }
	','
	{ after(grammarAccess.getGraphAccess().getCommaKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__8__Impl
	rule__Graph__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getXaxisKeyword_8()); }
	'Xaxis'
	{ after(grammarAccess.getGraphAccess().getXaxisKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__9__Impl
	rule__Graph__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getEqualsSignKeyword_9()); }
	'='
	{ after(grammarAccess.getGraphAccess().getEqualsSignKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__10__Impl
	rule__Graph__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getX_axisAssignment_10()); }
	(rule__Graph__X_axisAssignment_10)
	{ after(grammarAccess.getGraphAccess().getX_axisAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__11__Impl
	rule__Graph__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getCommaKeyword_11()); }
	','
	{ after(grammarAccess.getGraphAccess().getCommaKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__12__Impl
	rule__Graph__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getCurveAssignment_12()); }
	(rule__Graph__CurveAssignment_12)
	{ after(grammarAccess.getGraphAccess().getCurveAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__13__Impl
	rule__Graph__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getGroup_13()); }
	(rule__Graph__Group_13__0)*
	{ after(grammarAccess.getGraphAccess().getGroup_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group__14__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getRightCurlyBracketKeyword_14()); }
	'}'
	{ after(grammarAccess.getGraphAccess().getRightCurlyBracketKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Graph__Group_13__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group_13__0__Impl
	rule__Graph__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group_13__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getCommaKeyword_13_0()); }
	','
	{ after(grammarAccess.getGraphAccess().getCommaKeyword_13_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group_13__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graph__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group_13__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGraphAccess().getCurveAssignment_13_1()); }
	(rule__Graph__CurveAssignment_13_1)
	{ after(grammarAccess.getGraphAccess().getCurveAssignment_13_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Csv_loader__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Csv_loader__Group__0__Impl
	rule__Csv_loader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Csv_loader__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCsv_loaderAccess().getCsv_loaderAction_0()); }
	()
	{ after(grammarAccess.getCsv_loaderAccess().getCsv_loaderAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Csv_loader__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Csv_loader__Group__1__Impl
	rule__Csv_loader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Csv_loader__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCsv_loaderAccess().getOpenKeyword_1()); }
	'open'
	{ after(grammarAccess.getCsv_loaderAccess().getOpenKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Csv_loader__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Csv_loader__Group__2__Impl
	rule__Csv_loader__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Csv_loader__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCsv_loaderAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getCsv_loaderAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Csv_loader__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Csv_loader__Group__3__Impl
	rule__Csv_loader__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Csv_loader__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCsv_loaderAccess().getFile_nameAssignment_3()); }
	(rule__Csv_loader__File_nameAssignment_3)
	{ after(grammarAccess.getCsv_loaderAccess().getFile_nameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Csv_loader__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Csv_loader__Group__4__Impl
	rule__Csv_loader__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Csv_loader__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCsv_loaderAccess().getGroup_4()); }
	(rule__Csv_loader__Group_4__0)?
	{ after(grammarAccess.getCsv_loaderAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Csv_loader__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Csv_loader__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Csv_loader__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCsv_loaderAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getCsv_loaderAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Csv_loader__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Csv_loader__Group_4__0__Impl
	rule__Csv_loader__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Csv_loader__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCsv_loaderAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getCsv_loaderAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Csv_loader__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Csv_loader__Group_4__1__Impl
	rule__Csv_loader__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Csv_loader__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCsv_loaderAccess().getSepKeyword_4_1()); }
	'sep'
	{ after(grammarAccess.getCsv_loaderAccess().getSepKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Csv_loader__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Csv_loader__Group_4__2__Impl
	rule__Csv_loader__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Csv_loader__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCsv_loaderAccess().getEqualsSignKeyword_4_2()); }
	'='
	{ after(grammarAccess.getCsv_loaderAccess().getEqualsSignKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Csv_loader__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Csv_loader__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Csv_loader__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCsv_loaderAccess().getSeparatorAssignment_4_3()); }
	(rule__Csv_loader__SeparatorAssignment_4_3)
	{ after(grammarAccess.getCsv_loaderAccess().getSeparatorAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Curve__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Curve__Group__0__Impl
	rule__Curve__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurveAccess().getCurveAction_0()); }
	()
	{ after(grammarAccess.getCurveAccess().getCurveAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Curve__Group__1__Impl
	rule__Curve__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurveAccess().getCurveKeyword_1()); }
	'curve'
	{ after(grammarAccess.getCurveAccess().getCurveKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Curve__Group__2__Impl
	rule__Curve__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurveAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getCurveAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Curve__Group__3__Impl
	rule__Curve__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurveAccess().getGroup_3()); }
	(rule__Curve__Group_3__0)?
	{ after(grammarAccess.getCurveAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Curve__Group__4__Impl
	rule__Curve__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurveAccess().getGroup_4()); }
	(rule__Curve__Group_4__0)?
	{ after(grammarAccess.getCurveAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Curve__Group__5__Impl
	rule__Curve__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurveAccess().getGroup_5()); }
	(rule__Curve__Group_5__0)?
	{ after(grammarAccess.getCurveAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Curve__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurveAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getCurveAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Curve__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Curve__Group_3__0__Impl
	rule__Curve__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurveAccess().getLabel_nameKeyword_3_0()); }
	'label_name'
	{ after(grammarAccess.getCurveAccess().getLabel_nameKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Curve__Group_3__1__Impl
	rule__Curve__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurveAccess().getEqualsSignKeyword_3_1()); }
	'='
	{ after(grammarAccess.getCurveAccess().getEqualsSignKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Curve__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurveAccess().getLabel_nameAssignment_3_2()); }
	(rule__Curve__Label_nameAssignment_3_2)
	{ after(grammarAccess.getCurveAccess().getLabel_nameAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Curve__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Curve__Group_4__0__Impl
	rule__Curve__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurveAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getCurveAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Curve__Group_4__1__Impl
	rule__Curve__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurveAccess().getLegendKeyword_4_1()); }
	'legend'
	{ after(grammarAccess.getCurveAccess().getLegendKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Curve__Group_4__2__Impl
	rule__Curve__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurveAccess().getEqualsSignKeyword_4_2()); }
	'='
	{ after(grammarAccess.getCurveAccess().getEqualsSignKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Curve__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurveAccess().getLegendAssignment_4_3()); }
	(rule__Curve__LegendAssignment_4_3)
	{ after(grammarAccess.getCurveAccess().getLegendAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Curve__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Curve__Group_5__0__Impl
	rule__Curve__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurveAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getCurveAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Curve__Group_5__1__Impl
	rule__Curve__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurveAccess().getColorKeyword_5_1()); }
	'color'
	{ after(grammarAccess.getCurveAccess().getColorKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Curve__Group_5__2__Impl
	rule__Curve__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurveAccess().getEqualsSignKeyword_5_2()); }
	'='
	{ after(grammarAccess.getCurveAccess().getEqualsSignKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Curve__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCurveAccess().getColorAssignment_5_3()); }
	(rule__Curve__ColorAssignment_5_3)
	{ after(grammarAccess.getCurveAccess().getColorAssignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Html_generator_program__StatementAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHtml_generator_programAccess().getStatementStatementParserRuleCall_3_0()); }
		rulestatement
		{ after(grammarAccess.getHtml_generator_programAccess().getStatementStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Html_generator_program__StatementAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHtml_generator_programAccess().getStatementStatementParserRuleCall_4_1_0()); }
		rulestatement
		{ after(grammarAccess.getHtml_generator_programAccess().getStatementStatementParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getGraphAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__StyleAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphAccess().getStyleType_graphEnumRuleCall_6_0()); }
		ruletype_graph
		{ after(grammarAccess.getGraphAccess().getStyleType_graphEnumRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__X_axisAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphAccess().getX_axisEStringParserRuleCall_10_0()); }
		ruleEString
		{ after(grammarAccess.getGraphAccess().getX_axisEStringParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__CurveAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphAccess().getCurveCurveParserRuleCall_12_0()); }
		rulecurve
		{ after(grammarAccess.getGraphAccess().getCurveCurveParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__CurveAssignment_13_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGraphAccess().getCurveCurveParserRuleCall_13_1_0()); }
		rulecurve
		{ after(grammarAccess.getGraphAccess().getCurveCurveParserRuleCall_13_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Csv_loader__File_nameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCsv_loaderAccess().getFile_nameEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getCsv_loaderAccess().getFile_nameEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Csv_loader__SeparatorAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCsv_loaderAccess().getSeparatorEStringParserRuleCall_4_3_0()); }
		ruleEString
		{ after(grammarAccess.getCsv_loaderAccess().getSeparatorEStringParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__Label_nameAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCurveAccess().getLabel_nameEStringParserRuleCall_3_2_0()); }
		ruleEString
		{ after(grammarAccess.getCurveAccess().getLabel_nameEStringParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__LegendAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCurveAccess().getLegendEStringParserRuleCall_4_3_0()); }
		ruleEString
		{ after(grammarAccess.getCurveAccess().getLegendEStringParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Curve__ColorAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCurveAccess().getColorList_colorEnumRuleCall_5_3_0()); }
		rulelist_color
		{ after(grammarAccess.getCurveAccess().getColorList_colorEnumRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
